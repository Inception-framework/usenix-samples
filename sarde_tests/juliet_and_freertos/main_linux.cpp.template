
/* NOTE - eventually this file will be automatically updated using a Perl script that understand
 * the naming of test case files, functions, and namespaces.
 */

#include <time.h>   /* for time() */
#include <stdlib.h> /* for srand() */

#include "std_testcase.h"
#include "testcases.h"

const int GLOBAL_CONST_TRUE = 1; /* true */
const int GLOBAL_CONST_FALSE = 0; /* false */
const int GLOBAL_CONST_FIVE = 5; /* 5 */

int globalTrue = 1; /* true */
int globalFalse = 0; /* false */
int globalFive = 5; /* 5 */

#ifdef KLEE
#define RAND32 klee_int("random");
#endif

//int GLOBAL_CONST_FIVE = 5;

extern "C" int vuln_function_caller() {
  /* seed randomness */

  srand( (unsigned)time(NULL) );

  //globalArgc = argc;
  //globalArgv = argv;

  #ifndef OMITBAD


  	/* Calling C bad functions */
  	/* BEGIN-AUTOGENERATED-C-BAD-FUNCTION-CALLS */

    /* END-AUTOGENERATED-C-BAD-FUNCTION-CALLS */


  #ifdef __cplusplus
  	/* Calling C++ bad functions */
  	/* BEGIN-AUTOGENERATED-CPP-BAD-FUNCTION-CALLS */

    /* END-AUTOGENERATED-CPP-BAD-FUNCTION-CALLS */

  #endif /* __cplusplus */

  #endif /* OMITBAD */

  	return 0;
}
